"'Add New Account' As screen":
    OnVisible: |
        =If(Or(CountRows(OfflineBookingData)>0,CountRows(OfflineTimeEntry)>0,CountRows(OfflinePictureSignature)>0,CountRows(OfflineAccount)>0,CountRows(OfflineContact)>0),
        If( Connection.Connected,
            ForAll(OfflineBookingData, Patch('Bookable Resource Bookings',ThisRecord.BookingItem,{Name: ThisRecord.Name, 'Start Time':ThisRecord.'Start Time','End Time':ThisRecord.'End Time','Actual Arrival Time':ThisRecord.'Actual Arrival Time','Estimated Arrival Time':ThisRecord.'Estimated Arrival Time',Duration:ThisRecord.Duration,'Booking Status':ThisRecord.'Booking Status', 'Booking Type': ThisRecord.'Booking Type', Resource:ThisRecord.Resource}));
            Clear(OfflineBookingData); Refresh('Bookable Resource Bookings'); ForAll(OfflineTimeEntry, Patch('Time Entries',ThisRecord.TimeEntryItem,{'Bookable Resource':ThisRecord.'Bookable Resource',Type:ThisRecord.Type, Start:ThisRecord.Start, End:ThisRecord.End, Date:ThisRecord.Date, 'Work Order':ThisRecord.'Work Order', 'Bookable Resource Booking':ThisRecord.'Bookable Resource Booking', 'Entry Status':ThisRecord.'Entry Status', Description: ThisRecord.Description, 'External Comments':ThisRecord.'External Comments'}));
            Clear(OfflineTimeEntry); Refresh('Time Entries');
            ForAll(OfflineAccount,Patch(Accounts, ThisRecord.AccountItem, {'Account Name':ThisRecord.'Account Name', 'Main Phone':ThisRecord.'Main Phone', Email:ThisRecord.Email, 'Address 1: City':ThisRecord.'Address 1: City'}));
            Clear(OfflineAccount); Refresh(Accounts);
        ForAll(OfflineContact,Patch(Contacts, ThisRecord.ContactItem, {'First Name':ThisRecord.'First Name', 'Last Name':ThisRecord.'Last Name', Email:ThisRecord.Email, 'Business Phone':ThisRecord.'Business Phone'}));
            Clear(OfflineContact); Refresh(Contacts);
            ForAll(OfflinePictureSignature,Patch(Notes,Defaults(Notes),{'File Name':ThisRecord.'File Name',Title:ThisRecord.Title,Regarding:ThisRecord.Regarding, Document:ThisRecord.Document, 'Is Document':ThisRecord.'Is Document'}));
            Clear(OfflinePictureSignature);Notify("Data is Updated Online Successfully",NotificationType.Success)
        );)

    Component1_19 As Component1:
        Height: =70
        ZIndex: =2

    Label1_5 As label:
        Align: =Align.Center
        Fill: =RGBA(187, 221, 140, 1)
        Height: =72
        Size: =21
        Text: ="Create New Account"
        Width: =640
        Y: =71
        ZIndex: =3

    Icon5_5 As icon.ChevronLeft:
        Icon: =Icon.ChevronLeft
        OnSelect: =Navigate(Account)
        X: =576
        ZIndex: =4

    Button12_3 As button:
        Height: =70
        OnSelect: |
            =SubmitForm(Form_NewAccount);
            NewForm(Form_NewAccount);
        Size: =24
        Text: ="Create Account"
        Width: =640
        Y: =1066
        ZIndex: =5

    MenuLeftNav_20 As MenuLeftNav:
        Height: =MenuLeftNav_20.MenuHeight
        Width: =MenuLeftNav_20.MenuWidth
        Y: =10
        ZIndex: =7

    Form_NewAccount As form:
        DataSource: =Accounts
        DefaultMode: =FormMode.New
        Height: =799
        OnFailure: =Notify("Please Fill required Info",NotificationType.Error)
        OnSuccess: |+
            =Navigate(Account);
            Notify("Entry Created",NotificationType.Success);
            
        Width: =640
        Y: =196
        ZIndex: =8

        Email_DataCard2 As typedDataCard.textualEditCard:
            BorderStyle: =BorderStyle.Solid
            DataField: ="emailaddress1"
            Default: =ThisItem.Email
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@Accounts],DataSourceInfo.DisplayName,"emailaddress1")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@Accounts], DataSourceInfo.MaxLength, "emailaddress1")
            Required: =false
            Update: =DataCardValue33.Text
            Width: =640
            X: =0
            Y: =3
            ZIndex: =1

            DataCardKey43 As label:
                AutoHeight: =true
                Height: =48
                Size: =21
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            DataCardValue33 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                Height: =70
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =21
                Tooltip: =Parent.DisplayName
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardKey43.Y + DataCardKey43.Height + 5
                ZIndex: =2

            ErrorMessage42 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =24
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue33.Y + DataCardValue33.Height
                ZIndex: =3

            StarVisible42 As label:
                Align: =Align.Center
                Height: =DataCardKey43.Height
                Size: =21
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey43.Y
                ZIndex: =4

        "'Account Name_DataCard1' As typedDataCard.textualEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="name"
            Default: =ThisItem.'Account Name'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@Accounts],DataSourceInfo.DisplayName,"name")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@Accounts], DataSourceInfo.MaxLength, "name")
            Required: =true
            Update: =DataCardValue30.Text
            Width: =640
            X: =0
            Y: =0
            ZIndex: =9

            DataCardKey40 As label:
                AutoHeight: =true
                Height: =48
                Size: =21
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            DataCardValue30 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                Height: =70
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =21
                Tooltip: =Parent.DisplayName
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardKey40.Y + DataCardKey40.Height + 5
                ZIndex: =2

            ErrorMessage39 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =24
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue30.Y + DataCardValue30.Height
                ZIndex: =3

            StarVisible39 As label:
                Align: =Align.Center
                Height: =DataCardKey40.Height
                Size: =21
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey40.Y
                ZIndex: =4

        "'Main Phone_DataCard1' As typedDataCard.textualEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="telephone1"
            Default: =ThisItem.'Main Phone'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@Accounts],DataSourceInfo.DisplayName,"telephone1")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@Accounts], DataSourceInfo.MaxLength, "telephone1")
            Required: =false
            Update: =DataCardValue31.Text
            Width: =640
            X: =0
            Y: =1
            ZIndex: =9

            DataCardKey41 As label:
                AutoHeight: =true
                Height: =48
                Size: =21
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            DataCardValue31 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                Height: =70
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =21
                Tooltip: =Parent.DisplayName
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardKey41.Y + DataCardKey41.Height + 5
                ZIndex: =2

            ErrorMessage40 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =24
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue31.Y + DataCardValue31.Height
                ZIndex: =3

            StarVisible40 As label:
                Align: =Align.Center
                Height: =DataCardKey41.Height
                Size: =21
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey41.Y
                ZIndex: =4

        "'Address 1: City_DataCard1' As typedDataCard.textualEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="address1_city"
            Default: |-
                =ThisItem.'Address 1: City'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@Accounts],DataSourceInfo.DisplayName,"address1_city")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@Accounts], DataSourceInfo.MaxLength, "address1_city")
            Required: =false
            Update: =DataCardValue32.Text
            Width: =640
            X: =0
            Y: =2
            ZIndex: =9

            DataCardKey42 As label:
                AutoHeight: =true
                Height: =48
                Size: =21
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            DataCardValue32 As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                Height: =70
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =21
                Tooltip: =Parent.DisplayName
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardKey42.Y + DataCardKey42.Height + 5
                ZIndex: =2

            ErrorMessage41 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =24
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue32.Y + DataCardValue32.Height
                ZIndex: =3

            StarVisible41 As label:
                Align: =Align.Center
                Height: =DataCardKey42.Height
                Size: =21
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey42.Y
                ZIndex: =4

    Timer1_9 As timer:
        AutoStart: =true
        Duration: =10000
        Height: =66
        OnTimerEnd: |
            =If(Or(CountRows(OfflineBookingData)>0,CountRows(OfflineTimeEntry)>0,CountRows(OfflinePictureSignature)>0,CountRows(OfflineAccount)>0,CountRows(OfflineContact)>0),
            If( Connection.Connected,
                ForAll(OfflineBookingData, Patch('Bookable Resource Bookings',ThisRecord.BookingItem,{Name: ThisRecord.Name, 'Start Time':ThisRecord.'Start Time','End Time':ThisRecord.'End Time','Actual Arrival Time':ThisRecord.'Actual Arrival Time','Estimated Arrival Time':ThisRecord.'Estimated Arrival Time',Duration:ThisRecord.Duration,'Booking Status':ThisRecord.'Booking Status', 'Booking Type': ThisRecord.'Booking Type', Resource:ThisRecord.Resource}));
                Clear(OfflineBookingData); Refresh('Bookable Resource Bookings'); ForAll(OfflineTimeEntry, Patch('Time Entries',ThisRecord.TimeEntryItem,{'Bookable Resource':ThisRecord.'Bookable Resource',Type:ThisRecord.Type, Start:ThisRecord.Start, End:ThisRecord.End, Date:ThisRecord.Date, 'Work Order':ThisRecord.'Work Order', 'Bookable Resource Booking':ThisRecord.'Bookable Resource Booking', 'Entry Status':ThisRecord.'Entry Status', Description: ThisRecord.Description, 'External Comments':ThisRecord.'External Comments'}));
                Clear(OfflineTimeEntry); Refresh('Time Entries');
                ForAll(OfflineAccount,Patch(Accounts, ThisRecord.AccountItem, {'Account Name':ThisRecord.'Account Name', 'Main Phone':ThisRecord.'Main Phone', Email:ThisRecord.Email, 'Address 1: City':ThisRecord.'Address 1: City'}));
                Clear(OfflineAccount); Refresh(Accounts);
            ForAll(OfflineContact,Patch(Contacts, ThisRecord.ContactItem, {'First Name':ThisRecord.'First Name', 'Last Name':ThisRecord.'Last Name', Email:ThisRecord.Email, 'Business Phone':ThisRecord.'Business Phone'}));
                Clear(OfflineContact); Refresh(Contacts);
                ForAll(OfflinePictureSignature,Patch(Notes,Defaults(Notes),{'File Name':ThisRecord.'File Name',Title:ThisRecord.Title,Regarding:ThisRecord.Regarding, Document:ThisRecord.Document, 'Is Document':ThisRecord.'Is Document'}));
                Clear(OfflinePictureSignature);Notify("Data is Updated Online Successfully",NotificationType.Success)
            );)
        Repeat: =true
        Visible: =false
        Width: =202
        X: =20
        Y: =92
        ZIndex: =9

