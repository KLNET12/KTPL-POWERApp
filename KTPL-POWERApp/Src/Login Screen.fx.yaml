"'Login Screen' As screen":
    OnVisible: |
        =If(Or(CountRows(OfflineBookingData)>0,CountRows(OfflineTimeEntry)>0,CountRows(OfflinePictureSignature)>0,CountRows(OfflineAccount)>0,CountRows(OfflineContact)>0),
        If( Connection.Connected,
            ForAll(OfflineBookingData, Patch('Bookable Resource Bookings',ThisRecord.BookingItem,{Name: ThisRecord.Name, 'Start Time':ThisRecord.'Start Time','End Time':ThisRecord.'End Time','Actual Arrival Time':ThisRecord.'Actual Arrival Time','Estimated Arrival Time':ThisRecord.'Estimated Arrival Time',Duration:ThisRecord.Duration,'Booking Status':ThisRecord.'Booking Status', 'Booking Type': ThisRecord.'Booking Type', Resource:ThisRecord.Resource}));
            Clear(OfflineBookingData); Refresh('Bookable Resource Bookings'); ForAll(OfflineTimeEntry, Patch('Time Entries',ThisRecord.TimeEntryItem,{'Bookable Resource':ThisRecord.'Bookable Resource',Type:ThisRecord.Type, Start:ThisRecord.Start, End:ThisRecord.End, Date:ThisRecord.Date, 'Work Order':ThisRecord.'Work Order', 'Bookable Resource Booking':ThisRecord.'Bookable Resource Booking', 'Entry Status':ThisRecord.'Entry Status', Description: ThisRecord.Description, 'External Comments':ThisRecord.'External Comments'}));
            Clear(OfflineTimeEntry); Refresh('Time Entries');
            ForAll(OfflineAccount,Patch(Accounts, ThisRecord.AccountItem, {'Account Name':ThisRecord.'Account Name', 'Main Phone':ThisRecord.'Main Phone', Email:ThisRecord.Email, 'Address 1: City':ThisRecord.'Address 1: City'}));
            Clear(OfflineAccount); Refresh(Accounts);
        ForAll(OfflineContact,Patch(Contacts, ThisRecord.ContactItem, {'First Name':ThisRecord.'First Name', 'Last Name':ThisRecord.'Last Name', Email:ThisRecord.Email, 'Business Phone':ThisRecord.'Business Phone'}));
            Clear(OfflineContact); Refresh(Contacts);
            ForAll(OfflinePictureSignature,Patch(Notes,Defaults(Notes),{'File Name':ThisRecord.'File Name',Title:ThisRecord.Title,Regarding:ThisRecord.Regarding, Document:ThisRecord.Document, 'Is Document':ThisRecord.'Is Document'}));
            Clear(OfflinePictureSignature);Notify("Data is Updated Online Successfully",NotificationType.Success)
        );)

    Label4 As label:
        Align: =Align.Center
        Fill: =RGBA(187, 221, 140, 1)
        FontWeight: =FontWeight.Semibold
        Height: =70
        Size: =21
        Text: ="Enter your username"
        Width: =640
        X: =2
        Y: =104
        ZIndex: =2

    Label4_1 As label:
        Align: =Align.Center
        Fill: =RGBA(187, 221, 140, 1)
        FontWeight: =FontWeight.Semibold
        Height: =70
        Size: =21
        Text: ="Enter the Password"
        Width: =640
        X: =2
        Y: =251
        ZIndex: =3

    TextInput1 As text:
        Default: =""
        Height: =80
        HintText: ="Enter your password"
        Mode: =If(ShowPass,TextMode.SingleLine,TextMode.Password)
        Size: =21
        Width: =640
        X: =2
        Y: =321
        ZIndex: =4

    Button2 As button:
        Fill: =RGBA(99, 139, 44, 1)
        Height: =77
        OnSelect: |-
            =If(CountRows(Filter('Bookable Resources',Username =TextInput2.Text)) =1 && CountRows(Filter('Bookable Resources',Password =TextInput1.Text))=1, Navigate(DashBoard), Notify("Incorrect Details, Please Try again ",NotificationType.Error));
            Set(varpassword,TextInput1.Text);Set(varusername,TextInput2.Text)
        Size: =24
        Text: ="Login"
        Width: =640
        X: =2
        Y: =446
        ZIndex: =5

    TextInput2 As text:
        Default: =""
        Height: =77
        HintText: ="Enter your username"
        Size: =21
        Width: =640
        X: =2
        Y: =174
        ZIndex: =6

    Component1_1 As Component1:
        Height: =60
        ZIndex: =7

    Timer1_22 As timer:
        AutoStart: =true
        Duration: =10000
        Height: =66
        OnTimerEnd: |
            =If(Or(CountRows(OfflineBookingData)>0,CountRows(OfflineTimeEntry)>0,CountRows(OfflinePictureSignature)>0,CountRows(OfflineAccount)>0,CountRows(OfflineContact)>0),
            If( Connection.Connected,
                ForAll(OfflineBookingData, Patch('Bookable Resource Bookings',ThisRecord.BookingItem,{Name: ThisRecord.Name, 'Start Time':ThisRecord.'Start Time','End Time':ThisRecord.'End Time','Actual Arrival Time':ThisRecord.'Actual Arrival Time','Estimated Arrival Time':ThisRecord.'Estimated Arrival Time',Duration:ThisRecord.Duration,'Booking Status':ThisRecord.'Booking Status', 'Booking Type': ThisRecord.'Booking Type', Resource:ThisRecord.Resource}));
                Clear(OfflineBookingData); Refresh('Bookable Resource Bookings'); ForAll(OfflineTimeEntry, Patch('Time Entries',ThisRecord.TimeEntryItem,{'Bookable Resource':ThisRecord.'Bookable Resource',Type:ThisRecord.Type, Start:ThisRecord.Start, End:ThisRecord.End, Date:ThisRecord.Date, 'Work Order':ThisRecord.'Work Order', 'Bookable Resource Booking':ThisRecord.'Bookable Resource Booking', 'Entry Status':ThisRecord.'Entry Status', Description: ThisRecord.Description, 'External Comments':ThisRecord.'External Comments'}));
                Clear(OfflineTimeEntry); Refresh('Time Entries');
                ForAll(OfflineAccount,Patch(Accounts, ThisRecord.AccountItem, {'Account Name':ThisRecord.'Account Name', 'Main Phone':ThisRecord.'Main Phone', Email:ThisRecord.Email, 'Address 1: City':ThisRecord.'Address 1: City'}));
                Clear(OfflineAccount); Refresh(Accounts);
            ForAll(OfflineContact,Patch(Contacts, ThisRecord.ContactItem, {'First Name':ThisRecord.'First Name', 'Last Name':ThisRecord.'Last Name', Email:ThisRecord.Email, 'Business Phone':ThisRecord.'Business Phone'}));
                Clear(OfflineContact); Refresh(Contacts);
                ForAll(OfflinePictureSignature,Patch(Notes,Defaults(Notes),{'File Name':ThisRecord.'File Name',Title:ThisRecord.Title,Regarding:ThisRecord.Regarding, Document:ThisRecord.Document, 'Is Document':ThisRecord.'Is Document'}));
                Clear(OfflinePictureSignature);Notify("Data is Updated Online Successfully",NotificationType.Success)
            );)
        Repeat: =true
        Visible: =false
        Width: =202
        X: =20
        Y: =92
        ZIndex: =8

    Image3 As image:
        Height: =64
        Image: ='Hide Pass'
        OnSelect: =Set(ShowPass,true)
        Visible: =!ShowPass
        Width: =64
        X: =562
        Y: =329
        ZIndex: =9

    Image3_1 As image:
        Height: =64
        Image: =ShowPass_1
        OnSelect: =Set(ShowPass,false)
        Visible: =ShowPass
        Width: =64
        X: =562
        Y: =329
        ZIndex: =10

